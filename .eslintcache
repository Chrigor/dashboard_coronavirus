[{"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\App.js":"1","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\pages\\Home\\index.js":"2","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Layout\\index.js":"3","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Layout\\styles.js":"4","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\styles\\GlobalStyle.js":"5","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Header\\styles.js":"6","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Header\\index.js":"7","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\pages\\Home\\styles.js":"8","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\index.js":"9","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\routes.js":"10","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Button\\styles.js":"11","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Loading\\styles.js":"12","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Loading\\index.js":"13","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Button\\index.js":"14","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\index.js":"15","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\rootSaga.js":"16","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\sagas.js":"17","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\index.js":"18","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\types.js":"19","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\types.js":"20","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\actions.js":"21","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\sagas.js":"22","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\index.js":"23","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\utils\\formatDataChartBar.js":"24","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\services\\api.js":"25","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\rootReducer.js":"26","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\actions.js":"27","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\types.js":"28","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\sagas.js":"29","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\index.js":"30"},{"size":433,"mtime":1609175499949,"results":"31","hashOfConfig":"32"},{"size":5323,"mtime":1609423477531,"results":"33","hashOfConfig":"32"},{"size":301,"mtime":1608822372302,"results":"34","hashOfConfig":"32"},{"size":626,"mtime":1609105849656,"results":"35","hashOfConfig":"32"},{"size":1421,"mtime":1608837328067,"results":"36","hashOfConfig":"32"},{"size":970,"mtime":1609105823005,"results":"37","hashOfConfig":"32"},{"size":277,"mtime":1609173913867,"results":"38","hashOfConfig":"32"},{"size":1308,"mtime":1609174380997,"results":"39","hashOfConfig":"32"},{"size":200,"mtime":1609423882653,"results":"40","hashOfConfig":"32"},{"size":349,"mtime":1608820899120,"results":"41","hashOfConfig":"32"},{"size":867,"mtime":1608837111476,"results":"42","hashOfConfig":"32"},{"size":1143,"mtime":1608837170176,"results":"43","hashOfConfig":"32"},{"size":306,"mtime":1608837175108,"results":"44","hashOfConfig":"32"},{"size":218,"mtime":1608837102641,"results":"45","hashOfConfig":"32"},{"size":430,"mtime":1609191627833,"results":"46","hashOfConfig":"32"},{"size":474,"mtime":1609194137918,"results":"47","hashOfConfig":"32"},{"size":1214,"mtime":1609290254203,"results":"48","hashOfConfig":"32"},{"size":827,"mtime":1609193272689,"results":"49","hashOfConfig":"32"},{"size":181,"mtime":1609193273390,"results":"50","hashOfConfig":"32"},{"size":183,"mtime":1609193371880,"results":"51","hashOfConfig":"32"},{"size":368,"mtime":1609193279890,"results":"52","hashOfConfig":"32"},{"size":467,"mtime":1609194254043,"results":"53","hashOfConfig":"32"},{"size":827,"mtime":1609193280075,"results":"54","hashOfConfig":"32"},{"size":522,"mtime":1609195058071,"results":"55","hashOfConfig":"32"},{"size":134,"mtime":1609076493356,"results":"56","hashOfConfig":"32"},{"size":230,"mtime":1609193400126,"results":"57","hashOfConfig":"32"},{"size":368,"mtime":1609193272289,"results":"58","hashOfConfig":"32"},{"size":187,"mtime":1609355056465,"results":"59","hashOfConfig":"32"},{"size":1911,"mtime":1609423514077,"results":"60","hashOfConfig":"32"},{"size":818,"mtime":1609423042879,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1do6k9o",{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\App.js",[],["135","136"],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\pages\\Home\\index.js",["137","138","139"],"import React, { useEffect, useState } from 'react';\r\nimport { ContainerSideGrapich, ContainerGrapichMain, Header, TitleChart } from './styles';\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { loadRequest as loadRequestDataToday } from '../../store/ducks/dataToday/actions';\r\nimport { loadRequest as loadRequestDataByState } from '../../store/ducks/dataByState/actions';\r\nimport { loadRequest as loadRequestDataTodayBR } from '../../store/ducks/dataTodayBrazil/actions';\r\n\r\nimport formatDataBar from '../../utils/formatDataChartBar';\r\n\r\nfunction Home() {\r\n    const ONE_MINUTE = 1000 * 60;\r\n    const dispatch = useDispatch();\r\n    const dataToday = useSelector(state => state[\"dataToday\"]);\r\n    const dataByState = useSelector(state => state[\"dataByState\"]);\r\n    const dataTodayBrazil = useSelector(state => state[\"dataTodayBrazil\"]);\r\n\r\n    const [dataMain, setDataMain] = useState({});\r\n    const [dataTotal, setDataTotal] = useState({});\r\n    const [dataTotalYesterday, setDataTotalYesterday] = useState({});\r\n\r\n    const chartMain = {\r\n        labels: [\"Suspeitos\", \"Confirmados\", \"Rejeitados\", \"Total\"],\r\n        datasets: [\r\n            {\r\n                label: \"Total de Casos\",\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgba(75,192,192,0.8)\",\r\n                borderWidth: 1.5,\r\n                hoverBorderColor: \"rgba(75,192,192,1)\",\r\n                hoverBorderWidth: 2.5,\r\n                borderCapStyle: \"butt\",\r\n                borderDashOffset: 0.0,\r\n                data: [30, 450, 1402, 1500],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const optionsMain = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false,\r\n            labels: {\r\n                fontColor: \"gray\",\r\n                fontSize: 14,\r\n            },\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        lineHeight: 2,\r\n                        fontSize: 12,\r\n                        fontStyle: \"bold\",\r\n                        precision: 5,\r\n                        suggestedMin: 0,\r\n                        fontColor: \"gray\",\r\n                        // stepSize: 100,\r\n                        beginAtZero: true,\r\n                        callback: function (tickValue, index, ticks) {\r\n                            return tickValue;\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    ticks: {\r\n                        fontColor: \"gray\",\r\n                        fontSize: 18,\r\n                        stepSize: 1,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false,\r\n            labels: {\r\n                fontColor: \"gray\",\r\n                fontSize: 14,\r\n            },\r\n        },\r\n    };\r\n\r\n    function getDataDashboard() {\r\n        dispatch(loadRequestDataToday());\r\n        dispatch(loadRequestDataByState());\r\n        dispatch(loadRequestDataTodayBR());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataDashboard();\r\n        setInterval(getDataDashboard, ONE_MINUTE);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const labels = Object.keys(dataToday.data);\r\n        const data = Object.values(dataToday.data);\r\n\r\n        const dataChart = formatDataBar(data, labels, \"Casos\");\r\n        setDataTotal(dataChart);\r\n\r\n    }, [dataToday]);\r\n\r\n    useEffect(() => {\r\n        const labels = Object.keys(dataTodayBrazil.data);\r\n        const data = Object.values(dataTodayBrazil.data);\r\n\r\n        const dataChart = formatDataBar(data, labels, \"Casos ontem\");\r\n        setDataTotalYesterday(dataChart);\r\n\r\n    }, [dataTodayBrazil]);\r\n\r\n    useEffect(() => {\r\n        const labels = dataByState.data.map((element) => element.uf).reverse();\r\n        const cases = dataByState.data.map((element) => element.cases).reverse();\r\n\r\n        const dataChart = formatDataBar(cases, labels, \"Casos\");\r\n        setDataMain(dataChart);\r\n\r\n    }, [dataByState]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ContainerSideGrapich>\r\n                <div className=\"containerGrapich\">\r\n                    <Header>\r\n                        <TitleChart size={1.4}>Total de Casos no Brasil</TitleChart>\r\n                    </Header>\r\n                    <Bar data={dataTotal} options={options} />\r\n                </div>\r\n                <div className=\"containerGrapich\">\r\n                    <Header>\r\n                    <TitleChart size={1.3}>Total de Casos Ontem no Brasil</TitleChart>\r\n                    </Header>\r\n                    <Bar data={dataTotalYesterday} options={options} />\r\n                </div>\r\n\r\n            </ContainerSideGrapich>\r\n\r\n            <ContainerGrapichMain>\r\n                <Header>\r\n                    <TitleChart size={2.3}>Casos por UF</TitleChart>\r\n                </Header>\r\n\r\n                <div className=\"containerGrapichMain\">\r\n                    <Bar data={dataMain} options={optionsMain} />\r\n                </div>\r\n            </ContainerGrapichMain>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Layout\\index.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Layout\\styles.js",[],["140","141"],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\styles\\GlobalStyle.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Header\\styles.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Header\\index.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\pages\\Home\\styles.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\index.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\routes.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Button\\styles.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Loading\\styles.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Loading\\index.js",[],["142","143"],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\components\\Button\\index.js",[],["144","145"],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\index.js",["146"],"import {createStore, applyMiddleware} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './ducks/rootReducer';\r\nimport rootSaga from './ducks/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware),\r\n);\r\n\r\n// const persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default {store};","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\rootSaga.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\sagas.js",["147"],"import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n// import { navigate } from '../../../services/navigate';\r\n\r\nexport function* getDataToday() {\r\n  try {\r\n    const { data } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil`,\r\n    );\r\n\r\n    // formata data\r\n    const dataFormatted = formatData(data);\r\n    \r\n    yield put(loadSuccess(dataFormatted));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    yield put(loadFailure());\r\n  }\r\n}\r\n\r\nfunction formatData(data) {\r\n  delete data[\"data\"][\"country\"]\r\n  delete data[\"data\"][\"updated_at\"]\r\n\r\n  const keys = Object.keys(data[\"data\"]);\r\n  const total = keys.reduce((acum, key) => {\r\n    return acum + data[\"data\"][key];\r\n  }, 0);\r\n\r\n\r\n  data[\"data\"][\"Confirmados\"] = data[\"data\"][\"confirmed\"]\r\n  data[\"data\"][\"Mortes\"] = data[\"data\"][\"deaths\"]\r\n  data[\"data\"][\"Recuperados\"] = data[\"data\"][\"recovered\"]\r\n  data[\"data\"][\"Casos\"] = data[\"data\"][\"cases\"]\r\n\r\n  delete data[\"data\"][\"confirmed\"]\r\n  delete data[\"data\"][\"cases\"]\r\n  delete data[\"data\"][\"deaths\"]\r\n  delete data[\"data\"][\"recovered\"]\r\n\r\n  data[\"data\"][\"Total\"] = total;\r\n\r\n  return data;\r\n}","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\index.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\types.js",["148"],"const base = \"@dataToday\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\types.js",["149"],"const base = \"@dataByState\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\actions.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\sagas.js",["150"],"import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n// import { navigate } from '../../../services/navigate';\r\n\r\nexport function* getDataByState() {\r\n  try {\r\n    const {data} = yield call(\r\n      api.get,\r\n      `/api/report/v1`,\r\n    );\r\n\r\n    yield put(loadSuccess(data));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    yield put(loadFailure());\r\n  }\r\n}","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataByState\\index.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\utils\\formatDataChartBar.js",["151"],"export default function (data, labels, title) {\r\n    return {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: title,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgba(75,192,192,0.8)\",\r\n                borderWidth: 1.5,\r\n                hoverBorderColor: \"rgba(75,192,192,1)\",\r\n                hoverBorderWidth: 2.5,\r\n                borderCapStyle: \"butt\",\r\n                borderDashOffset: 0.0,\r\n                data,\r\n            },\r\n        ],\r\n    }\r\n}","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\services\\api.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\rootReducer.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataToday\\actions.js",[],"E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\types.js",["152"],"const base = \"@dataTodayBrazil\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\sagas.js",["153","154"],"import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n\r\n\r\nexport function* getDataTodayBrazil() {\r\n  try {\r\n    const now = new Date();\r\n    const yesterday = new Date();\r\n\r\n    now.setDate(now.getDate() - 2);\r\n    yesterday.setDate(now.getDate() - 1);\r\n\r\n    const { data: dataYesterDay } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil/${formatDateToAPI(yesterday.toLocaleDateString())}`,\r\n    );\r\n\r\n    const { data: dataToday } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil/${formatDateToAPI(now.toLocaleDateString())}`,\r\n    );\r\n\r\n    const dataYesterDayFormatted = formatData(dataYesterDay);\r\n    const dataTodayFormatted = formatData(dataToday);\r\n\r\n    const data = subtractData(dataTodayFormatted, dataYesterDayFormatted);\r\n\r\n    yield put(loadSuccess(data));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    console.log(err);\r\n    yield put(loadFailure());\r\n  }\r\n}\r\n\r\nfunction formatData(data) {\r\n \r\n  const Casos = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"cases\"];\r\n  }, 0);\r\n\r\n  const Mortes = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"deaths\"];\r\n  }, 0);\r\n\r\n  const Suspeitos = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"suspects\"];\r\n  }, 0);\r\n\r\n  const Negados = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"refuses\"];\r\n  }, 0);\r\n\r\n  const dataFormatted = {\r\n    Casos,\r\n    Mortes,\r\n    Suspeitos,\r\n    Negados\r\n  };\r\n\r\n  return dataFormatted;\r\n}\r\n\r\nfunction formatDateToAPI(date) {\r\n  const [day, month, year] = date.split(\"/\");\r\n\r\n  return `${year}${month}${day}`\r\n}\r\n\r\nfunction subtractData(dataToday, dataYesterday) {\r\n  const data = {};\r\n  const keys = Object.keys(dataYesterday);\r\n\r\n  keys.map((key) => {\r\n    data[key] = dataToday[key] - dataYesterday[key]\r\n  });\r\n\r\n  return data;\r\n}","E:\\Projetos\\ReactJS\\coronavirusdashboard\\src\\store\\ducks\\dataTodayBrazil\\index.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":3,"column":15,"nodeType":"161","messageId":"162","endLine":3,"endColumn":19},{"ruleId":"159","severity":1,"message":"163","line":23,"column":11,"nodeType":"161","messageId":"162","endLine":23,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":101,"column":8,"nodeType":"166","endLine":101,"endColumn":10,"suggestions":"167"},{"ruleId":"155","replacedBy":"168"},{"ruleId":"157","replacedBy":"169"},{"ruleId":"155","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"155","replacedBy":"172"},{"ruleId":"157","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":17,"column":1,"nodeType":"176","endLine":17,"endColumn":24},{"ruleId":"159","severity":1,"message":"177","line":1,"column":21,"nodeType":"161","messageId":"162","endLine":1,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":3,"column":1,"nodeType":"176","endLine":7,"endColumn":5},{"ruleId":"174","severity":1,"message":"175","line":3,"column":1,"nodeType":"176","endLine":7,"endColumn":5},{"ruleId":"159","severity":1,"message":"177","line":1,"column":21,"nodeType":"161","messageId":"162","endLine":1,"endColumn":27},{"ruleId":"174","severity":1,"message":"178","line":1,"column":1,"nodeType":"176","endLine":18,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":3,"column":1,"nodeType":"176","endLine":7,"endColumn":5},{"ruleId":"159","severity":1,"message":"177","line":1,"column":21,"nodeType":"161","messageId":"162","endLine":1,"endColumn":27},{"ruleId":"179","severity":1,"message":"180","line":76,"column":18,"nodeType":"181","messageId":"182","endLine":76,"endColumn":20},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'chartMain' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ONE_MINUTE' and 'getDataDashboard'. Either include them or remove the dependency array.","ArrayExpression",["185"],["183"],["184"],["183"],["184"],["183"],["184"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'select' is defined but never used.","Unexpected default export of anonymous function","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [ONE_MINUTE, getDataDashboard]",{"range":"188","text":"189"},[3371,3373],"[ONE_MINUTE, getDataDashboard]"]