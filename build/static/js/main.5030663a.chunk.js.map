{"version":3,"sources":["styles/GlobalStyle.js","components/Layout/styles.js","components/Header/styles.js","components/Header/index.js","pages/Home/styles.js","store/ducks/dataToday/types.js","store/ducks/dataByState/types.js","store/ducks/dataTodayBrazil/types.js","utils/formatDataChartBar.js","pages/Home/index.js","store/ducks/dataToday/actions.js","store/ducks/dataByState/actions.js","store/ducks/dataTodayBrazil/actions.js","routes.js","components/Layout/index.js","store/ducks/dataToday/index.js","store/ducks/dataByState/index.js","store/ducks/dataTodayBrazil/index.js","store/ducks/rootReducer.js","services/api.js","store/ducks/dataToday/sagas.js","store/ducks/dataByState/sagas.js","store/ducks/dataTodayBrazil/sagas.js","store/ducks/rootSaga.js","store/index.js","App.js","index.js"],"names":["createGlobalStyle","Container","styled","div","TitleHeader","h1","cssIcon","css","BsFilter","RiNotificationFill","Header","ContainerSideGrapich","ContainerGrapichMain","TitleChart","props","size","base","LOAD_REQUEST","LOAD_SUCCESS","LOAD_FAILURE","data","labels","title","datasets","label","backgroundColor","borderColor","borderWidth","hoverBorderColor","hoverBorderWidth","borderCapStyle","borderDashOffset","Home","dispatch","useDispatch","dataToday","useSelector","state","dataByState","dataTodayBrazil","useState","dataMain","setDataMain","dataTotal","setDataTotal","dataTotalYesterday","setDataTotalYesterday","options","responsive","maintainAspectRatio","legend","display","fontColor","fontSize","getDataDashboard","payload","type","Types","loadRequestDataByState","loadRequestDataTodayBR","useEffect","setInterval","Object","keys","values","dataChart","formatDataBar","map","element","uf","reverse","cases","className","scales","yAxes","ticks","lineHeight","fontStyle","precision","suggestedMin","beginAtZero","callback","tickValue","index","xAxes","stepSize","Routes","path","component","exact","Layout","INITIAL_STATE","error","loading","reducer","action","dataTodayTypes","produce","draft","appReducer","combineReducers","API","axios","create","baseURL","getDataToday","call","api","get","dataFormatted","formatData","put","alert","total","reduce","acum","key","getDataByState","getDataTodayBrazil","now","Date","yesterday","setDate","getDate","formatDateToAPI","toLocaleDateString","dataYesterDay","dataYesterDayFormatted","dataTodayFormatted","subtractData","console","log","Casos","obj","Mortes","Suspeitos","Negados","date","split","day","month","year","dataYesterday","rootSaga","all","takeLatest","DataTodayTypes","DataByStateTypes","DataTodayBRTypes","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","App","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5030663a.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    box-sizing:border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n  html, body, #root {\r\n    height: 100%;\r\n    overflow-x:hidden;\r\n    background: var(--secondary);\r\n    ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  \r\n    ::-webkit-scrollbar-thumb {\r\n      background-color:var(--quinary);\r\n      border-radius:4px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background-color:var(--secondary);\r\n    }\r\n  }\r\n  select[readonly], input:read-only {\r\n  background: var(--input-read-only); /*Simular campo inativo - Sugestão @GabrielRodrigues*/\r\n  pointer-events: none;\r\n  touch-action: none;\r\n}\r\n  *, button, input {\r\n    border:0;\r\n    outline:0;\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n\r\n  body {\r\n    position:relative;\r\n  }\r\n  \r\n  :root {\r\n    --primary: #36393f;\r\n    --secondary:#1E1E2F;\r\n    --tertiary: #BF15A6;\r\n    --quaternary: #364f6b; \r\n    /* 1b263b */\r\n    --quinary: #0AAA96;\r\n    --senary: #828386;\r\n   \r\n   --backgroundChart: #27293D;\r\n   --backgroundLoading: rgba(39, 41, 61, 0.6);\r\n    --white: #fff;\r\n    --gray: #8a8c90;\r\n \r\n    --notification: #f84a4b;\r\n    --chart: #00D6B4;\r\n    --mention-detail: #f9a839;\r\n    --mention-message: #A035A1;\r\n \r\n    --link: #5d80d6;\r\n    --border-white: rgba(255,255,255,0.7);\r\n    --input-read-only: #cccc;\r\n  }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    position:relative;\r\n    display: grid;\r\n\r\n    grid-template-columns: 400px auto; \r\n    grid-template-rows: 60px auto;\r\n    grid-template-areas:\r\n        \"MH MH\"\r\n        \"CG CM\";\r\n\r\n    grid-gap: 16px 8px;\r\n\r\n    height: 100%;\r\n    background: var(--secondary);\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n\r\n    padding:8px 48px;\r\n\r\n    @media (max-width: 1200px) {\r\n        grid-template-columns: auto;  \r\n        grid-template-rows: 80px auto auto;\r\n        grid-template-areas:\r\n        \"MH\"\r\n        \"CG\"\r\n        \"CM\";\r\n    }\r\n`;","import styled, { css } from \"styled-components\";\r\nimport { BsFilter } from \"react-icons/bs\";\r\nimport { RiNotificationFill } from \"react-icons/ri\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: MH;\r\n  background: var(--secondary);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n/* \r\n  border-bottom: 1px solid #eee; */\r\n`;\r\n\r\nexport const TitleHeader = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  color: var(--white);\r\n  margin: 0 24px;\r\n`;\r\n\r\nexport const ContainerExtra = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  margin: 0 24px;\r\n`;\r\n\r\nconst cssIcon = css`\r\n  color: var(--white);\r\n  height: 32px;\r\n  width: 32px;\r\n  cursor:pointer;\r\n  transition: all 300ms;\r\n  &:hover {\r\n    color:var(--quinary);\r\n  }\r\n`;\r\n\r\nexport const IconFilter = styled(BsFilter)`\r\n  ${cssIcon}\r\n`;\r\n\r\nexport const IconNotification = styled(RiNotificationFill)`\r\n  ${cssIcon}\r\n`;","import React from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  TitleHeader,\r\n} from \"./styles\";\r\n\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleHeader>Dashboard CoronaVírus</TitleHeader>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\n\r\nexport const ContainerSideGrapich = styled.div`\r\n  grid-area: CG;\r\n  background: var(--backgroundChart);\r\n  border-radius:8px;\r\n\r\n  display:flex;\r\n  flex-direction:column;\r\n\r\n  justify-content:space-around;\r\n\r\n  padding:0px 8px 24px 8px;\r\n\r\n  > div {\r\n    flex:1;\r\n    border-radius: 8px;\r\n    \r\n    box-sizing: border-box!important;\r\n    max-height:260px;\r\n  }\r\n\r\n  > div + div {\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\nexport const ContainerGrapichMain = styled.div`\r\n  grid-area: CM;\r\n  background: var(--backgroundChart);\r\n  /* background: red; */\r\n\r\n  border-radius:8px;\r\n\r\n  display:flex;\r\n  flex-direction:column;\r\n  width:100%;\r\n\r\n  justify-content:space-between;\r\n\r\n  padding:8px;\r\n\r\n\r\n  &:after {\r\n    content: '';\r\n  }\r\n\r\n  .containerGrapichMain {\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n  }\r\n\r\n  canvas {\r\n    height: 100%!important;\r\n    width: 94%!important;\r\n    /* min-height:480px; */\r\n  }\r\n`;\r\n\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content:center;\r\n`;\r\n\r\nexport const TitleChart = styled.h1`\r\n  color: var(--white);\r\n  font-weight: 100;\r\n  font-size: ${(props) => props.size ? props.size : 1.8}rem;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\n","const base = \"@dataToday\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","const base = \"@dataByState\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","const base = \"@dataTodayBrazil\";\r\n\r\nexport default {\r\n    LOAD_REQUEST: `${base}/LOAD_REQUEST`,\r\n    LOAD_SUCCESS: `${base}/LOAD_SUCCESS`,\r\n    LOAD_FAILURE: `${base}/LOAD_FAILURE`,\r\n  };","export default function (data, labels, title) {\r\n    return {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: title,\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgba(75,192,192,0.8)\",\r\n                borderWidth: 1.5,\r\n                hoverBorderColor: \"rgba(75,192,192,1)\",\r\n                hoverBorderWidth: 2.5,\r\n                borderCapStyle: \"butt\",\r\n                borderDashOffset: 0.0,\r\n                data,\r\n            },\r\n        ],\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { ContainerSideGrapich, ContainerGrapichMain, Header, TitleChart } from './styles';\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { loadRequest as loadRequestDataToday } from '../../store/ducks/dataToday/actions';\r\nimport { loadRequest as loadRequestDataByState } from '../../store/ducks/dataByState/actions';\r\nimport { loadRequest as loadRequestDataTodayBR } from '../../store/ducks/dataTodayBrazil/actions';\r\n\r\nimport formatDataBar from '../../utils/formatDataChartBar';\r\n\r\nfunction Home() {\r\n    const ONE_MINUTE = 1000 * 60;\r\n    const dispatch = useDispatch();\r\n    const dataToday = useSelector(state => state[\"dataToday\"]);\r\n    const dataByState = useSelector(state => state[\"dataByState\"]);\r\n    const dataTodayBrazil = useSelector(state => state[\"dataTodayBrazil\"]);\r\n\r\n    const [dataMain, setDataMain] = useState({});\r\n    const [dataTotal, setDataTotal] = useState({});\r\n    const [dataTotalYesterday, setDataTotalYesterday] = useState({});\r\n\r\n    const chartMain = {\r\n        labels: [\"Suspeitos\", \"Confirmados\", \"Rejeitados\", \"Total\"],\r\n        datasets: [\r\n            {\r\n                label: \"Total de Casos\",\r\n                backgroundColor: \"transparent\",\r\n                borderColor: \"rgba(75,192,192,0.8)\",\r\n                borderWidth: 1.5,\r\n                hoverBorderColor: \"rgba(75,192,192,1)\",\r\n                hoverBorderWidth: 2.5,\r\n                borderCapStyle: \"butt\",\r\n                borderDashOffset: 0.0,\r\n                data: [30, 450, 1402, 1500],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const optionsMain = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false,\r\n            labels: {\r\n                fontColor: \"gray\",\r\n                fontSize: 14,\r\n            },\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        lineHeight: 2,\r\n                        fontSize: 12,\r\n                        fontStyle: \"bold\",\r\n                        precision: 5,\r\n                        suggestedMin: 0,\r\n                        fontColor: \"gray\",\r\n                        // stepSize: 100,\r\n                        beginAtZero: true,\r\n                        callback: function (tickValue, index, ticks) {\r\n                            return tickValue;\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    ticks: {\r\n                        fontColor: \"gray\",\r\n                        fontSize: 18,\r\n                        stepSize: 1,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false,\r\n            labels: {\r\n                fontColor: \"gray\",\r\n                fontSize: 14,\r\n            },\r\n        },\r\n    };\r\n\r\n    function getDataDashboard() {\r\n        dispatch(loadRequestDataToday());\r\n        dispatch(loadRequestDataByState());\r\n        dispatch(loadRequestDataTodayBR());\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataDashboard();\r\n        setInterval(getDataDashboard, ONE_MINUTE);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const labels = Object.keys(dataToday.data);\r\n        const data = Object.values(dataToday.data);\r\n\r\n        const dataChart = formatDataBar(data, labels, \"Casos\");\r\n        setDataTotal(dataChart);\r\n\r\n    }, [dataToday]);\r\n\r\n    useEffect(() => {\r\n        const labels = Object.keys(dataTodayBrazil.data);\r\n        const data = Object.values(dataTodayBrazil.data);\r\n\r\n        const dataChart = formatDataBar(data, labels, \"Casos ontem\");\r\n        setDataTotalYesterday(dataChart);\r\n\r\n    }, [dataTodayBrazil]);\r\n\r\n    useEffect(() => {\r\n        const labels = dataByState.data.map((element) => element.uf).reverse();\r\n        const cases = dataByState.data.map((element) => element.cases).reverse();\r\n\r\n        const dataChart = formatDataBar(cases, labels, \"Casos\");\r\n        setDataMain(dataChart);\r\n\r\n    }, [dataByState]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <ContainerSideGrapich>\r\n                <div className=\"containerGrapich\">\r\n                    <Header>\r\n                        <TitleChart size={1.4}>Total de Casos no Brasil</TitleChart>\r\n                    </Header>\r\n                    <Bar data={dataTotal} options={options} />\r\n                </div>\r\n                <div className=\"containerGrapich\">\r\n                    <Header>\r\n                    <TitleChart size={1.3}>Total de Casos Ontem no Brasil</TitleChart>\r\n                    </Header>\r\n                    <Bar data={dataTotalYesterday} options={options} />\r\n                </div>\r\n\r\n            </ContainerSideGrapich>\r\n\r\n            <ContainerGrapichMain>\r\n                <Header>\r\n                    <TitleChart size={2.3}>Casos por UF</TitleChart>\r\n                </Header>\r\n\r\n                <div className=\"containerGrapichMain\">\r\n                    <Bar data={dataMain} options={optionsMain} />\r\n                </div>\r\n            </ContainerGrapichMain>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import Types from './types';\r\n\r\n// primeiro parametro é o type do action e o segundo um pay load se tiver\r\nexport const loadRequest = (payload) => ({\r\n  type: Types.LOAD_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport const loadSuccess = (object) => ({\r\n  type: Types.LOAD_SUCCESS,\r\n  payload: object,\r\n});\r\n\r\nexport const loadFailure = () => ({\r\n  type: Types.LOAD_FAILURE,\r\n});","import Types from './types';\r\n\r\n// primeiro parametro é o type do action e o segundo um pay load se tiver\r\nexport const loadRequest = (payload) => ({\r\n  type: Types.LOAD_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport const loadSuccess = (object) => ({\r\n  type: Types.LOAD_SUCCESS,\r\n  payload: object,\r\n});\r\n\r\nexport const loadFailure = () => ({\r\n  type: Types.LOAD_FAILURE,\r\n});","import Types from './types';\r\n\r\n// primeiro parametro é o type do action e o segundo um pay load se tiver\r\nexport const loadRequest = (payload) => ({\r\n  type: Types.LOAD_REQUEST,\r\n  payload,\r\n});\r\n\r\nexport const loadSuccess = (object) => ({\r\n  type: Types.LOAD_SUCCESS,\r\n  payload: object,\r\n});\r\n\r\nexport const loadFailure = () => ({\r\n  type: Types.LOAD_FAILURE,\r\n});","  \r\nimport React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"*\" component={() => <h1> Page not found </h1>} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\nimport Header from '../Header';\r\nimport Routes from '../../routes';\r\n\r\nfunction Layout() {\r\n    return (\r\n        <Container>\r\n            <Header />\r\n            <Routes />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Layout;","import dataTodayTypes from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case dataTodayTypes.LOAD_REQUEST:\r\n      return produce(state, (draft) => {\r\n        draft.loading = true;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayTypes.LOAD_SUCCESS:\r\n      return produce(state, (draft) => {\r\n        const { payload } = action;\r\n        \r\n        draft.data = payload.data;\r\n        draft.loading = false;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayTypes.LOAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import dataTodayTypes from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case dataTodayTypes.LOAD_REQUEST:\r\n      return produce(state, (draft) => {\r\n        draft.loading = true;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayTypes.LOAD_SUCCESS:\r\n      return produce(state, (draft) => {\r\n        const { payload } = action;\r\n        \r\n        draft.data = payload.data;\r\n        draft.loading = false;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayTypes.LOAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import dataTodayBrazil from './types';\r\nimport produce from 'immer';\r\n\r\nconst INITIAL_STATE = {\r\n  data: [],\r\n  error: false,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case dataTodayBrazil.LOAD_REQUEST:\r\n      return produce(state, (draft) => {\r\n        draft.loading = true;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayBrazil.LOAD_SUCCESS:\r\n      return produce(state, (draft) => {\r\n        const { payload } = action;\r\n\r\n        draft.data = payload;\r\n        draft.loading = false;\r\n        draft.error = false;\r\n      });\r\n\r\n    case dataTodayBrazil.LOAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","  \r\nimport {combineReducers} from 'redux';\r\n\r\nimport dataToday from './dataToday';\r\nimport dataByState from './dataByState';\r\nimport dataTodayBrazil from './dataTodayBrazil';\r\n\r\n\r\nconst appReducer = combineReducers({\r\n  dataToday,\r\n  dataByState,\r\n  dataTodayBrazil\r\n});\r\n\r\nexport default appReducer;","import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: \"https://covid19-brazil-api.now.sh\"\r\n});\r\n\r\n\r\nexport default API;","import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n// import { navigate } from '../../../services/navigate';\r\n\r\nexport function* getDataToday() {\r\n  try {\r\n    const { data } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil`,\r\n    );\r\n\r\n    // formata data\r\n    const dataFormatted = formatData(data);\r\n    \r\n    yield put(loadSuccess(dataFormatted));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    yield put(loadFailure());\r\n  }\r\n}\r\n\r\nfunction formatData(data) {\r\n  delete data[\"data\"][\"country\"]\r\n  delete data[\"data\"][\"updated_at\"]\r\n\r\n  const keys = Object.keys(data[\"data\"]);\r\n  const total = keys.reduce((acum, key) => {\r\n    return acum + data[\"data\"][key];\r\n  }, 0);\r\n\r\n\r\n  data[\"data\"][\"Confirmados\"] = data[\"data\"][\"confirmed\"]\r\n  data[\"data\"][\"Mortes\"] = data[\"data\"][\"deaths\"]\r\n  data[\"data\"][\"Recuperados\"] = data[\"data\"][\"recovered\"]\r\n  data[\"data\"][\"Casos\"] = data[\"data\"][\"cases\"]\r\n\r\n  delete data[\"data\"][\"confirmed\"]\r\n  delete data[\"data\"][\"cases\"]\r\n  delete data[\"data\"][\"deaths\"]\r\n  delete data[\"data\"][\"recovered\"]\r\n\r\n  data[\"data\"][\"Total\"] = total;\r\n\r\n  return data;\r\n}","import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n// import { navigate } from '../../../services/navigate';\r\n\r\nexport function* getDataByState() {\r\n  try {\r\n    const {data} = yield call(\r\n      api.get,\r\n      `/api/report/v1`,\r\n    );\r\n\r\n    yield put(loadSuccess(data));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    yield put(loadFailure());\r\n  }\r\n}","import { call, put, select } from 'redux-saga/effects';\r\n\r\nimport { loadFailure, loadSuccess } from './actions';\r\nimport api from '../../../services/api';\r\n\r\n\r\nexport function* getDataTodayBrazil() {\r\n  try {\r\n    const now = new Date();\r\n    const yesterday = new Date();\r\n\r\n    now.setDate(now.getDate() - 2);\r\n    yesterday.setDate(now.getDate() - 1);\r\n\r\n    const { data: dataYesterDay } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil/${formatDateToAPI(yesterday.toLocaleDateString())}`,\r\n    );\r\n\r\n    const { data: dataToday } = yield call(\r\n      api.get,\r\n      `/api/report/v1/brazil/${formatDateToAPI(now.toLocaleDateString())}`,\r\n    );\r\n\r\n    const dataYesterDayFormatted = formatData(dataYesterDay);\r\n    const dataTodayFormatted = formatData(dataToday);\r\n\r\n    const data = subtractData(dataTodayFormatted, dataYesterDayFormatted);\r\n\r\n    yield put(loadSuccess(data));\r\n  } catch (err) {\r\n    alert(\"Houve ume erro\");\r\n    console.log(err);\r\n    yield put(loadFailure());\r\n  }\r\n}\r\n\r\nfunction formatData(data) {\r\n \r\n  const Casos = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"cases\"];\r\n  }, 0);\r\n\r\n  const Mortes = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"deaths\"];\r\n  }, 0);\r\n\r\n  const Suspeitos = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"suspects\"];\r\n  }, 0);\r\n\r\n  const Negados = data[\"data\"].reduce((acum, obj) => {\r\n    return acum + obj[\"refuses\"];\r\n  }, 0);\r\n\r\n  const dataFormatted = {\r\n    Casos,\r\n    Mortes,\r\n    Suspeitos,\r\n    Negados\r\n  };\r\n\r\n  return dataFormatted;\r\n}\r\n\r\nfunction formatDateToAPI(date) {\r\n  const [day, month, year] = date.split(\"/\");\r\n\r\n  return `${year}${month}${day}`\r\n}\r\n\r\nfunction subtractData(dataToday, dataYesterday) {\r\n  const data = {};\r\n  const keys = Object.keys(dataYesterday);\r\n\r\n  keys.map((key) => {\r\n    data[key] = dataToday[key] - dataYesterday[key]\r\n  });\r\n\r\n  return data;\r\n}","import { all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport DataTodayTypes from './dataToday/types';\r\nimport DataByStateTypes from './dataByState/types';\r\nimport DataTodayBRTypes from './dataTodayBrazil/types';\r\n\r\nimport { getDataToday } from './dataToday/sagas';\r\nimport { getDataByState } from './dataByState/sagas';\r\nimport { getDataTodayBrazil } from './dataTodayBrazil/sagas';\r\n\r\nexport default function* rootSaga() {\r\n    return yield all([\r\n        takeLatest(DataTodayTypes.LOAD_REQUEST, getDataToday),\r\n        takeLatest(DataByStateTypes.LOAD_REQUEST, getDataByState),\r\n        takeLatest(DataTodayBRTypes.LOAD_REQUEST, getDataTodayBrazil),\r\n    ]);\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './ducks/rootReducer';\r\nimport rootSaga from './ducks/rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(sagaMiddleware),\r\n);\r\n\r\n// const persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default {store};","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport GlobalStyle from './styles/GlobalStyle';\nimport Layout from './components/Layout';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n\n  return (\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Layout />\n      </BrowserRouter>\n    </Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}